language: java
jdk:
   - openjdk8
branches:
    only:
     - master
     
cache:
   directories:
      - '$HOME/.m2/repository'
      - '$HOME/.gradle'

before_install:
   - chmod +x ./gradlew

script: "./gradlew clean build"

before_deploy:
   # 현재 위치의 모든 파일을 springboot-webservice 이름으로 압축 
 #  - zip -r springboot-webservice *
   # Travis CI가 실행되는 위치에 deploy 디렉터리를 생성
  # - mkdir -p deploy
   #- mv springboot-webservice.zip deploy/springboot-webservice.zip
   - mkdir -p before-deploy
   - cp scripts/*.sh before-deploy/
   - cp appspec.yml before-deploy
   - cp build/libs/*.war before-deploy/ # springboot-webservice. war
   
   - cd before-deploy %% zip -r before-deploy *
   - cd ../ && mkdir -p deploy
   - mv before-deploy/before-deploy.zip deploy/spingboot-webservice.zip
   
deploy:
   - provider: s3
     access_key_id: $AWS_ACCESS_KEY
     secret_access_key: $AWS_SECRET_KEY
     bucket: a2student3-springboot-webservice2
     region: us-west-1
     skip_cleanup: true
     acl: private
     local_dir: deploy
     wait-until-deployed: true

   - provider: codedeploy
     access_key_id: $AWS_ACCESS_KEY
     secret_access_key: $AWS_SECRET_KEY
     bucket: a2student3-springboot-webservice2 # S3 bucket
     key: springboot-webservice.zip # 빌드 파일을 압축해서 전달
     bundle_type: zip
     application: springboot-webservice-minki # 웹 콘솔에서 등록한 CodeDeploy 애플리케이션
     deployment_group: springboot-webservice-minki-group # 웹 콘솔에서 등록한 CodeDeploy Group
     region: us-west-1
     wait-until-deployed: true

notification:
   email:
      recipients:
         - midaslmg94@gmail.com